#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.1
#  in conjunction with Tcl version 8.6
#    May 02, 2021 04:11:19 PM CEST  platform: Linux

import sys
from mfrc522 import SimpleMFRC522
import RPi.GPIO as GPIO
from time import sleep
import tkinter as tk

# Use Bradcom PIN setmode
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

# Pins
buzzer = 0
RelayPin = 7
RedLed = 14

reader = SimpleMFRC522()

# set Pin's mode to output, and initial level to LOW(0V)
GPIO.setup(RelayPin,GPIO.OUT,initial=GPIO.LOW)
GPIO.setup(RedLed,GPIO.OUT,initial=GPIO.LOW)
GPIO.setup(buzzer,GPIO.OUT,initial=GPIO.LOW)


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = background (root)
    init(root, top)
    root.mainloop()

w = None
def create_background(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_background(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = background (w)
    init(w, top, *args, **kwargs)
    return (w, top)

def destroy_background():
    global w
    w.destroy()
    w = None

class background:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        top.geometry("1905x1016+0+36")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("Giammarco Senatore NFC")
        top.configure(background="#757575")
        top.configure(highlightcolor="black")

        self.Message1 = tk.Message(top)
        self.Message1.place(relx=0.021, rely=0.03, relheight=0.406
                , relwidth=0.952)
        self.Message1.configure(background="#757575")
        self.Message1.configure(borderwidth="0")
        self.Message1.configure(font="-family {Quicksand Medium} -size 150")
        self.Message1.configure(foreground="#ffffff")
        self.Message1.configure(text='''Pagamenti NFC''')
        self.Message1.configure(width=1814)

        self.buy = tk.Button(top)
        self.buy.place(relx=0.058, rely=0.482, height=253, width=453)
        self.buy.configure(activebackground="#ff3d00")
        self.buy.configure(activeforeground="#76ff03")
        self.buy.configure(background="#ff3d00")
        self.buy.configure(command=self.buysome)
        self.buy.configure(font="-family {Quicksand Medium} -size 70")
        self.buy.configure(foreground="#ffffff")
        self.buy.configure(highlightbackground="#005ed8")
        self.buy.configure(text='''Paga 10€''')

        self.add = tk.Button(top)
        self.add.place(relx=0.357, rely=0.472, height=273, width=553)
        self.add.configure(activebackground="#64dd17")
        self.add.configure(activeforeground="#ff0000")
        self.add.configure(background="#64dd17")
        self.add.configure(command=self.addmoney)
        self.add.configure(font="-family {Quicksand Medium} -size 70")
        self.add.configure(foreground="#ffffff")
        self.add.configure(highlightbackground="#005ed8")
        self.add.configure(text='''Aggiungi 5€''')
        
        
        self.check = tk.Button(top)
        self.check.place(relx=0.724, rely=0.463, height=273, width=453)
        self.check.configure(activebackground="#2962ff")
        self.check.configure(activeforeground="#000000")
        self.check.configure(background="#2962ff")
        self.check.configure(command=self.checkbalance)
        self.check.configure(font="-family {Quicksand Medium} -size 70")
        self.check.configure(foreground="#ffffff")
        self.check.configure(highlightbackground="#005ed8")
        self.check.configure(text='''Bilancio''')

        self.bilanciotext = tk.Message(top)
        self.bilanciotext.place(relx=0.39, rely=0.787, relheight=0.156
                , relwidth=0.2)
        self.bilanciotext.configure(anchor="center", background="#494949")
        self.bilanciotext.configure(font="-family {Quicksand Medium} -size 100")
        self.bilanciotext.configure(foreground="#ffffff")
        self.money = tk.IntVar()
        self.bilanciotext.configure(textvariable=self.money)
        self.bilanciotext.configure(width=1000)

        self.saldo = tk.Message(top)
        self.saldo.place(relx=0.21, rely=0.787, relheight=0.156
                , relwidth=0.22)
        self.saldo.configure(background="#494949")
        self.saldo.configure(font="-family {Quicksand Medium} -size 100")
        self.saldo.configure(foreground="#ffffff")
        self.saldo.configure(text=" Saldo:")
        self.saldo.configure(width=1000)

        self.euro = tk.Message(top)
        self.euro.place(relx=0.55, rely=0.787, relheight=0.156
                , relwidth=0.1)
        self.euro.configure(background="#494949")
        self.euro.configure(font="-family {Quicksand Medium} -size 100")
        self.euro.configure(foreground="#ffffff")
        self.euro.configure(text="€")
        self.euro.configure(width=1000)

    def checkbalance(self):
        id, text = reader.read()
        text = int(text)
        self.money.set(text)
        GPIO.output(RelayPin,GPIO.HIGH)
        GPIO.output(buzzer,GPIO.HIGH)
        sleep(0.1)
        GPIO.output(buzzer,GPIO.LOW)
        sleep(1)
        GPIO.output(RelayPin,GPIO.LOW)
    
    def buysome(self):
        id, text = reader.read()
        text = int(text)
        buy = text - 10
        print(buy)
        reader.write(str(buy))
        self.money.set(str(buy))
        GPIO.output(RedLed,GPIO.HIGH)
        GPIO.output(buzzer,GPIO.HIGH)
        sleep(0.1)
        GPIO.output(buzzer,GPIO.LOW)
        sleep(1)
        GPIO.output(RedLed,GPIO.LOW)

    def addmoney(self):
        id, text = reader.read()
        text = int(text)
        buy = text + 5
        print(buy)
        reader.write(str(buy))
        self.money.set(str(buy))
        GPIO.output(RelayPin,GPIO.HIGH)
        GPIO.output(buzzer,GPIO.HIGH)
        sleep(0.1)
        GPIO.output(buzzer,GPIO.LOW)
        sleep(1)
        GPIO.output(RelayPin,GPIO.LOW)

if __name__ == '__main__':
    vp_start_gui()
